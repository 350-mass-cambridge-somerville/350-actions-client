name: netlify
on: [pull_request]
jobs:
  netlify-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install dependencies
        uses: cypress-io/github-action@v1
        with:
          # just perform install
          runTests: false

      - name: Build site
        run: REACT_APP_COMMIT_SHA=$GITHUB_SHA npm run build
        env:
          # unset CI environment variable so warnings are not treated as errors
          CI:
          # point API calls to "/api" that will later be redirected
          # to the remote API host
          REACT_APP_BASE_URL: '/api'
      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        # when deploying show the output from Netlify
        # and redirect its results into a JSON file
        run: |
          npm install netlify-cli
          npx netlify deploy --dir build --json | tee deploy.json

      - name: Run Cypress tests against draft deploy
        run: node ./scripts/test-draft-site.js

      # after the test run completes
      # store videos and any screenshots
      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      # Alternative: create and commit an empty cypress/screenshots folder
      # to always have something to upload
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

      # only runs read-only tests without stubbing
      - name: Run prod tests against draft deploy
        run: node ./scripts/test-prod-site.js
